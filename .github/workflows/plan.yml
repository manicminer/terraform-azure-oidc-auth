---
name: Plan
on:
  pull_request:
    types: ['opened', 'synchronize']
    paths:
      - '.github/workflows/plan.yml'
      - '**.tf'

concurrency:
  group: 'plan-${{ github.head_ref }}'
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.0-beta1

      - id: init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true
          TF_IN_AUTOMATION: true

      - id: validate
        run: terraform validate
        env:
          TF_IN_AUTOMATION: true

      - id: plan
        run: terraform plan -no-color
        continue-on-error: true
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true
          TF_IN_AUTOMATION: true

      - uses: robburger/terraform-pr-commenter@v1
        if: always() && (steps.validate.outcome == 'success' || steps.validate.outcome == 'failure')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
